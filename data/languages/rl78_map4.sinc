# BTCLR saddr.n, $addr20
:BTCLR saddr"."0, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x0; saddr; jdisp8 {
    if (saddr[0, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[0, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."1, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x1; saddr; jdisp8 {
    if (saddr[1, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[1, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."2, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x2; saddr; jdisp8 {
    if (saddr[2, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[2, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."3, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x3; saddr; jdisp8 {
    if (saddr[3, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[3, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."4, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x4; saddr; jdisp8 {
    if (saddr[4, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[4, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."5, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x5; saddr; jdisp8 {
    if (saddr[5, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[5, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."6, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x6; saddr; jdisp8 {
    if (saddr[6, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[6, 1] = 0;
    goto jdisp8;
}

:BTCLR saddr"."7, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x7; saddr; jdisp8 {
    if (saddr[7, 1]) goto <clear>;
    goto inst_next;
    <clear>
    saddr[7, 1] = 0;
    goto jdisp8;
}

# BTCLR sfr.n, $addr20
:BTCLR sfrp"."0, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x8; sfrp; jdisp8 {
    if (sfrp[0, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[0, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."1, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x9; sfrp; jdisp8 {
    if (sfrp[1, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[1, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."2, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xA; sfrp; jdisp8 {
    if (sfrp[2, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[2, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."3, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xB; sfrp; jdisp8 {
    if (sfrp[3, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[3, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."4, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xC; sfrp; jdisp8 {
    if (sfrp[4, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[4, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."5, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xD; sfrp; jdisp8 {
    if (sfrp[5, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[5, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."6, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xE; sfrp; jdisp8 {
    if (sfrp[6, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[6, 1] = 0;
    goto jdisp8;
}

:BTCLR sfrp"."7, jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xF; sfrp; jdisp8 {
    if (sfrp[7, 1]) goto <clear>;
    goto inst_next;
    <clear>
    sfrp[7, 1] = 0;
    goto jdisp8;
}

# BTCLR PSW.n, $addr20
:BTCLR "CY", jdisp8 is opcode=0x31; op_l=0x0 & op_h=0x8; sfr_byte=0xFA; jdisp8 {
    if ($(CY)) goto <clear>;
    goto inst_next;
    <clear>
    $(CY) = 0;
    goto jdisp8;
}

:BTCLR "AC", jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xB; sfr_byte=0xFA; jdisp8 {
    if ($(AC)) goto <clear>;
    goto inst_next;
    <clear>
    $(AC) = 0;
    goto jdisp8;
}

:BTCLR "Z", jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xE; sfr_byte=0xFA; jdisp8 {
    if ($(Z)) goto <clear>;
    goto inst_next;
    <clear>
    $(Z) = 0;
    goto jdisp8;
}

:BTCLR "IE", jdisp8 is opcode=0x31; op_l=0x0 & op_h=0xF; sfr_byte=0xFA; jdisp8 {
    if ($(IE)) goto <clear>;
    goto inst_next;
    <clear>
    $(IE) = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."0, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x0; jdisp8 {
    if (A[0, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[0, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."1, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x1; jdisp8 {
    if (A[1, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[1, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."2, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x2; jdisp8 {
    if (A[2, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[2, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."3, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x3; jdisp8 {
    if (A[3, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[3, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."4, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x4; jdisp8 {
    if (A[4, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[4, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."5, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x5; jdisp8 {
    if (A[5, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[5, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."6, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x6; jdisp8 {
    if (A[6, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[6, 1] = 0;
    goto jdisp8;
}

# BTCRL A.n, $addr20
:BTCLR A"."7, jdisp8 is opcode=0x31 & A; op_l=0x1 & op_h=0x7; jdisp8 {
    if (A[7, 1]) goto <clear>;
    goto inst_next;
    <clear>
    A[7, 1] = 0;
    goto jdisp8;
}

# BTCRL [HL].n, $addr20
:BTCLR AddrHL"."0, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0x8; jdisp8 {
    if (AddrHL[0, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[0, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."1, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0x9; jdisp8 {
    if (AddrHL[1, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[1, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."2, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0xA; jdisp8 {
    if (AddrHL[2, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[2, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."3, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0xB; jdisp8 {
    if (AddrHL[3, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[3, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."4, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0xC; jdisp8 {
    if (AddrHL[4, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[4, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."5, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0xD; jdisp8 {
    if (AddrHL[5, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[5, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."6, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0xE; jdisp8 {
    if (AddrHL[6, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[6, 1] = 0;
    goto jdisp8;
}

:BTCLR AddrHL"."7, jdisp8 is opcode=0x31 & AddrHL; op_l=0x1 & op_h=0xF; jdisp8 {
    if (AddrHL[7, 1]) goto <clear>;
    goto inst_next;
    <clear>
    AddrHL[7, 1] = 0;
    goto jdisp8;
}

# BT saddr.n, $addr20
:BT saddr"."0, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x0; saddr; jdisp8 {
    if (saddr[0, 1]) goto jdisp8;
}

:BT saddr"."1, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x1; saddr; jdisp8 {
    if (saddr[1, 1]) goto jdisp8;
}

:BT saddr"."2, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x2; saddr; jdisp8 {
    if (saddr[2, 1]) goto jdisp8;
}

:BT saddr"."3, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x3; saddr; jdisp8 {
    if (saddr[3, 1]) goto jdisp8;
}

:BT saddr"."4, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x4; saddr; jdisp8 {
    if (saddr[4, 1]) goto jdisp8;
}

:BT saddr"."5, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x5; saddr; jdisp8 {
    if (saddr[5, 1]) goto jdisp8;
}

:BT saddr"."6, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x6; saddr; jdisp8 {
    if (saddr[6, 1]) goto jdisp8;
}

:BT saddr"."7, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x7; saddr; jdisp8 {
    if (saddr[7, 1]) goto jdisp8;
}

# BT sfr.n, $addr20
:BT sfrp"."0, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x8; sfrp; jdisp8 {
    if (sfrp[0, 1]) goto jdisp8;
}

:BT sfrp"."1, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x9; sfrp; jdisp8 {
    if (sfrp[1, 1]) goto jdisp8;
}

:BT sfrp"."2, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xA; sfrp; jdisp8 {
    if (sfrp[2, 1]) goto jdisp8;
}

:BT sfrp"."3, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xB; sfrp; jdisp8 {
    if (sfrp[3, 1]) goto jdisp8;
}

:BT sfrp"."4, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xC; sfrp; jdisp8 {
    if (sfrp[4, 1]) goto jdisp8;
}

:BT sfrp"."5, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xD; sfrp; jdisp8 {
    if (sfrp[5, 1]) goto jdisp8;
}

:BT sfrp"."6, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xE; sfrp; jdisp8 {
    if (sfrp[6, 1]) goto jdisp8;
}

:BT sfrp"."7, jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xF; sfrp; jdisp8 {
    if (sfrp[7, 1]) goto jdisp8;
}

:BT "AC", jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xB; sfr_byte=0xFA; jdisp8 {
    if ($(AC)) goto jdisp8;
}

:BT "IE", jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xF; sfr_byte=0xFA; jdisp8 {
    if ($(IE)) goto jdisp8;
}

# BF PSW.n, $addr20
:BC jdisp8 is opcode=0x31; op_l=0x2 & op_h=0x8 & mov1_sreg=1; sfr_byte=0xFA; jdisp8 {
    if ($(CY)) goto jdisp8;
}

:BZ jdisp8 is opcode=0x31; op_l=0x2 & op_h=0xE & mov1_sreg=1; sfr_byte=0xFA; jdisp8 {
    if ($(Z)) goto jdisp8;
}

# BT A.n, $addr20
:BT A"."0, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x0; jdisp8 {
    if (A[0, 1]) goto jdisp8;
}

:BT A"."1, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x1; jdisp8 {
    if (A[1, 1]) goto jdisp8;
}

:BT A"."2, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x2; jdisp8 {
    if (A[2, 1]) goto jdisp8;
}

:BT A"."3, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x3; jdisp8 {
    if (A[3, 1]) goto jdisp8;
}

:BT A"."4, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x4; jdisp8 {
    if (A[4, 1]) goto jdisp8;
}

:BT A"."5, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x5; jdisp8 {
    if (A[5, 1]) goto jdisp8;
}

:BT A"."6, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x6; jdisp8 {
    if (A[6, 1]) goto jdisp8;
}

:BT A"."7, jdisp8 is opcode=0x31 & A; op_l=0x3 & op_h=0x7; jdisp8 {
    if (A[7, 1]) goto jdisp8;
}

# BT [HL].n, $addr20
:BT AddrHL"."0, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0x8; jdisp8 {
    if (AddrHL[0, 1]) goto jdisp8;
}

:BT AddrHL"."1, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0x9; jdisp8 {
    if (AddrHL[1, 1]) goto jdisp8;
}

:BT AddrHL"."2, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0xA; jdisp8 {
    if (AddrHL[2, 1]) goto jdisp8;
}

:BT AddrHL"."3, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0xB; jdisp8 {
    if (AddrHL[3, 1]) goto jdisp8;
}

:BT AddrHL"."4, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0xC; jdisp8 {
    if (AddrHL[4, 1]) goto jdisp8;
}

:BT AddrHL"."5, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0xD; jdisp8 {
    if (AddrHL[5, 1]) goto jdisp8;
}

:BT AddrHL"."6, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0xE; jdisp8 {
    if (AddrHL[6, 1]) goto jdisp8;
}

:BT AddrHL"."7, jdisp8 is opcode=0x31 & AddrHL; op_l=0x3 & op_h=0xF; jdisp8 {
    if (AddrHL[7, 1]) goto jdisp8;
}

# BF saddr.n, $addr20
:BF saddr"."0, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x0; saddr; jdisp8 {
    if (!saddr[0, 1]) goto jdisp8;
}

:BF saddr"."1, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x1; saddr; jdisp8 {
    if (!saddr[1, 1]) goto jdisp8;
}

:BF saddr"."2, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x2; saddr; jdisp8 {
    if (!saddr[2, 1]) goto jdisp8;
}

:BF saddr"."3, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x3; saddr; jdisp8 {
    if (!saddr[3, 1]) goto jdisp8;
}

:BF saddr"."4, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x4; saddr; jdisp8 {
    if (!saddr[4, 1]) goto jdisp8;
}

:BF saddr"."5, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x5; saddr; jdisp8 {
    if (!saddr[5, 1]) goto jdisp8;
}

:BF saddr"."6, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x6; saddr; jdisp8 {
    if (!saddr[6, 1]) goto jdisp8;
}

:BF saddr"."7, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x7; saddr; jdisp8 {
    if (!saddr[7, 1]) goto jdisp8;
}

# BF sfr.n, $addr20
:BF sfrp"."0, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x8; sfrp; jdisp8 {
    if (!sfrp[0, 1]) goto jdisp8;
}

:BF sfrp"."1, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x9; sfrp; jdisp8 {
    if (!sfrp[1, 1]) goto jdisp8;
}

:BF sfrp"."2, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xA; sfrp; jdisp8 {
    if (!sfrp[2, 1]) goto jdisp8;
}

:BF sfrp"."3, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xB; sfrp; jdisp8 {
    if (!sfrp[3, 1]) goto jdisp8;
}

:BF sfrp"."4, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xC; sfrp; jdisp8 {
    if (!sfrp[4, 1]) goto jdisp8;
}

:BF sfrp"."5, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xD; sfrp; jdisp8 {
    if (!sfrp[5, 1]) goto jdisp8;
}

:BF sfrp"."6, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xE; sfrp; jdisp8 {
    if (!sfrp[6, 1]) goto jdisp8;
}

:BF sfrp"."7, jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xF; sfrp; jdisp8 {
    if (!sfrp[7, 1]) goto jdisp8;
}

:BF "AC", jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xB; sfr_byte=0xFA; jdisp8 {
    if (!$(AC)) goto jdisp8;
}

:BF "IE", jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xF; sfr_byte=0xFA; jdisp8 {
    if (!$(IE)) goto jdisp8;
}

# BF PSW.n, $addr20
:BNC jdisp8 is opcode=0x31; op_l=0x4 & op_h=0x8 & mov1_sreg=1; sfr_byte=0xFA; jdisp8 {
    if (!$(CY)) goto jdisp8;
}

:BNZ jdisp8 is opcode=0x31; op_l=0x4 & op_h=0xE & mov1_sreg=1; sfr_byte=0xFA; jdisp8 {
    if (!$(Z)) goto jdisp8;
}

# BF A.n, $addr20
:BF A"."0, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x0; jdisp8 {
    if (A[0, 1]) goto jdisp8;
}

:BF A"."1, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x1; jdisp8 {
    if (A[1, 1]) goto inst_next;
    goto jdisp8;
}

:BF A"."2, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x2; jdisp8 {
    if (A[2, 1]) goto inst_next;
    goto jdisp8;
}

:BF A"."3, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x3; jdisp8 {
    if (A[3, 1]) goto inst_next;
    goto jdisp8;
}

:BF A"."4, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x4; jdisp8 {
    if (A[4, 1]) goto inst_next;
    goto jdisp8;
}

:BF A"."5, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x5; jdisp8 {
    if (A[5, 1]) goto inst_next;
    goto jdisp8;
}

:BF A"."6, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x6; jdisp8 {
    if (A[6, 1]) goto inst_next;
    goto jdisp8;
}

:BF A"."7, jdisp8 is opcode=0x31 & A; op_l=0x5 & op_h=0x7; jdisp8 {
    if (A[7, 1]) goto inst_next;
    goto jdisp8;
}

# BF [HL].n, $addr20
:BF AddrHL"."0, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0x8; jdisp8 {
    if (AddrHL[0, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."1, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0x9; jdisp8 {
    if (AddrHL[1, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."2, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0xA; jdisp8 {
    if (AddrHL[2, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."3, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0xB; jdisp8 {
    if (AddrHL[3, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."4, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0xC; jdisp8 {
    if (AddrHL[4, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."5, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0xD; jdisp8 {
    if (AddrHL[5, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."6, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0xE; jdisp8 {
    if (AddrHL[6, 1]) goto inst_next;
    goto jdisp8;
}

:BF AddrHL"."7, jdisp8 is opcode=0x31 & AddrHL; op_l=0x5 & op_h=0xF; jdisp8 {
    if (AddrHL[7, 1]) goto inst_next;
    goto jdisp8;
}

ABC: C is op_l=0x7 & C { export C; }
ABC: B is op_l=0x8 & B { export B; }
ABC: A is op_l=0x9 & A { export A; }

# SHL ABC, n
:SHL ABC, 1 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x1 {
    $(CY) = ABC[7, 1];
    ABC = ABC << 1;
}

:SHL ABC, 2 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x2 {
    $(CY) = ABC[6, 1];
    ABC = ABC << 2;
}

:SHL ABC, 3 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x3 {
    $(CY) = ABC[5, 1];
    ABC = ABC << 3;
}

:SHL ABC, 4 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x4 {
    $(CY) = ABC[4, 1];
    ABC = ABC << 4;
}

:SHL ABC, 5 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x5 {
    $(CY) = ABC[3, 1];
    ABC = ABC << 5;
}

:SHL ABC, 6 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x6 {
    $(CY) = ABC[2, 1];
    ABC = ABC << 6;
}

:SHL ABC, 7 is opcode=0x31 & ABC; op_l=0x7 & op_h=0x7 {
    $(CY) = ABC[1, 1];
    ABC = ABC << 7;
}


















# SHR A, n
:SHR A, shift_n is opcode=0x31 & A; op2_l=0xA & shift_n {
    inst_shr(A, shift_n);
}

# SHRW AX, n
:SHRW AX, shift_n is opcode=0x31 & AX; op2_l=0xE & shift_n {
    inst_shr(AX, shift_n);
}

# SHLW AX, n
:SHLW AX, shift_n is opcode=0x31 & AX; op2_l=0xD & shift_n {
    inst_shlw(AX, shift_n);
}

# SHLW BC, n
:SHLW BC, shift_n is opcode=0x31 & BC; op2_l=0xC & shift_n {
    inst_shlw(BC, shift_n);
}

#
# Table 15/30
#

# SAR A, n
:SAR A, shift_n is opcode=0x31 & A; op2_l=0xB & shift_n {
    inst_sar(A, shift_n);
}

# SARW AX, n
:SARW AX, shift_n is opcode=0x31 & AX; op2_l=0xF & shift_n {
    inst_sarw(AX, shift_n);
}

