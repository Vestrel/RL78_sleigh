<?xml version="1.0" encoding="UTF-8"?>

<!-- See Relax specification: Ghidra/Framework/SoftwareModeling/data/languages/processor_spec.rxg -->

<processor_spec>
  <properties>
    <property key="pcodeInjectLibraryClass" value="ghidra.rl78.RL78InjectLibrary"/>
  </properties>
  <programcounter register="PC"/>
  <incidentalcopy>
    <register name="HL0"/>
  </incidentalcopy>
  <segmentop space="ram" userop="segment" farpointer="yes">
    <pcode>
      <input name="seg" size="1"/>
      <input name="addr" size="2"/>
      <output name="res" size="3"/>
      <body><![CDATA[
        res = (zext(seg) << 16) + zext(addr);
      ]]></body>
    </pcode>
  </segmentop>
  <context_data>
    <tracked_set space="ram">
      <set name="CS0" val="0x0"/>
      <set name="ES0" val="0xf"/>
      <set name="CS1" val="0x0"/>
      <set name="ES1" val="0xf"/>
      <set name="CS2" val="0x0"/>
      <set name="ES2" val="0xf"/>
      <set name="CS3" val="0x0"/>
      <set name="ES3" val="0xf"/>
    </tracked_set>
  </context_data>
  <register_data>
    <register name="es_prefix" hidden="true"/>
    <register name="rsb" hidden="true"/>
  </register_data>
  <inferptrbounds>
    <range space="ram" first="0x10000" last="0xffee0"/>   <!-- Don't try to infer pointers from constants in the body of a function -->
  </inferptrbounds>
  <volatile outputop="reg_write" inputop="reg_read">
    <range space="ram" first="0xe0000" last="0xe00ff"/> <!-- xcbase xdbase -->
  </volatile>
</processor_spec>
